@using WebClient.Authentication
@namespace LoginComponent

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager




<AuthorizeView>
    <NotAuthorized>
        <div class="form-group">
            <label>Username: </label>
            <input type="text" placeholder="username..." @bind-value="username"/>
        </div>
        <div class="form-group">
            <label>Password: </label>
            <input type="password" placeholder="password..." @bind-value="password"/>
        </div>
        <div style="color:red">@errorMessage</div>

        <div class="form-group">
            <button href="" @onclick="PerformLoginAsync">Login</button>
            <button href="" @onclick="CreateAccountAsync">Create Account</button>
        </div>
    </NotAuthorized>
    <Authorized>
        <button href="" @onclick="PerformLogoutAsync">
            Log out
        </button>
    </Authorized>
</AuthorizeView>

@code {
    private string username;
    private string password;
    private string errorMessage;
    private User newUser;

    private async Task PerformLoginAsync()
    {
        errorMessage = "";
        try
        {
            await ((Authenticator) AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
            NavigationManager.NavigateTo("/MainMenu")
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
            errorMessage = e.Message;
        }
    }

    private async Task PerformLogoutAsync()
    {
        errorMessage = "";
        username = "";
        password = "";
        try
        {
            await ((Authenticator) AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }
    
    public async Task CreateAccountAsync()
    {
        errorMessage = "";
        try
        {
            newUser = new User
            {
                Username = username,
                Password = password
            };
            
            await ((UserWebService) IUserService).CreateAccount(newUser);
            username = "";
            password = "";
            errorMessage = "Please Login with your new credentials";
        }
        catch (Exception e)
        {
            username = "";
            password = "";
            errorMessage = e.Message;
        }
    }

}